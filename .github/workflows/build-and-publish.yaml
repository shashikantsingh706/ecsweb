name: Build and Publish Docker Image
on:
  workflow_dispatch:

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set Versions
        uses: actions/github-script@v4
        id: set_version
        with:
          script: |
            const tag = context.ref.substring(10)
            const no_v = tag.replace('v', '')
            const dash_index = no_v.lastIndexOf('-')
            const no_dash = (dash_index > -1) ?  no_v.substring(0, dash_index) : no_v
            core.setOutput('tag', tag)
            core.setOutput('no-v', no_v)
            core.setOutput('no-dash', no_dash)

- name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id:  ${{secrets.AWS_USER_KEY}}
          aws-secret-access-key:  ${{secrets.AWS_USER_SECRET_KEY}}
          aws-region: "us-east-1"
      
      - name: Configure AWS profile
        uses: Fooji/create-aws-profile-action@v1
        with:
          profile: default
          region: us-east-1
          key:  ${{secrets.AWS_USER_KEY}}
          secret:  ${{secrets.AWS_USER_SECRET_KEY}}
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: "891377310654.dkr.ecr.us-east-2.amazonaws.com"
          ECR_REPOSITORY: "app_repo"
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . -f app/Dockerfile

          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  terraform:
    name: Verify terraform
    runs-on: ubuntu-latest
    needs: [deploy]
    environment: dev
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_USER_KEY}}
          aws-secret-access-key: ${{secrets.AWS_USER_SECRET_KEY}}
          aws-region: "us-east-1"

      - name: Configure AWS profile
        uses: Fooji/create-aws-profile-action@v1
        with:
          profile: default
          region: us-east-1
          key:  ${{secrets.AWS_USER_KEY}}
          secret:  ${{secrets.AWS_USER_SECRET_KEY}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: "891377310654.dkr.ecr.us-east-2.amazonaws.com"
          ECR_REPOSITORY: "ecswebap"
          IMAGE_TAG: latest
          build-args: |
            DATABASE_CONNECTION_URI=${{ vars.DATABASE_CONNECTION_URI }}
            REDIS_HOST=${{ vars.REDIS_HOST }}
           run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . -f dev-ops/docker/Dockerfile

            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

